stages:
  - run

.run:
  stage: run
  script: |
    set -ex
    "$MAKE" clean
    "$MAKE" FEATURE_SUPPORT_PGO=disabled _all
    python3 scripts/perft_test.py
    "$MAKE" clean
    "$MAKE" _all

.run_linux:
  extends: .run
  parallel:
    matrix:
      - IMAGE: "debian:unstable-slim"
        COMPILER: ["gcc", "clang"]
      - IMAGE: "ghcr.io/void-linux/void-musl-busybox"
        COMPILER: ["gcc", "clang"]
  before_script: |
    set -ex
    if test "${IMAGE}" = "debian:unstable-slim"; then
      apt-get update -y
      apt-get install -y wget make pkgconf clang gcc g++ build-essential valgrind libbsd-dev libjemalloc-dev python3 git libzstd-dev libncurses-dev libncursesw5-dev perl stockfish fairy-stockfish
      rm -rf /var/lib/apt/lists/*
      export MAKE=make
      export PATH="$PATH:/usr/games"
    elif test "${IMAGE}" = "ghcr.io/void-linux/void-musl-busybox"; then
      xbps-install -Syu
      xbps-install -Sy wget bash make pkg-config clang gcc base-devel llvm libbsd-devel jemalloc-devel python3 git libzstd-devel ncurses-devel perl stockfish fairy-stockfish
      export MAKE=make
      export PATH="$PATH:/usr/games"
    else
      echo "image ${IMAGE}"
      exit 1
    fi
    if test "${COMPILER}" = gcc; then
      export CC=gcc CXX=g++
    elif test "${COMPILER}" = clang; then
      export CC=clang CXX=clang++
    fi
  script: |
    set -ex
    "$MAKE" clean
    "$MAKE" FEATURE_SUPPORT_PGO=disabled _all
    python3 scripts/perft_test.py
    "$MAKE" clean
    "$MAKE" _all

run_linux_amd64:
  extends: .run_linux
  image:
    name: "$IMAGE"
    docker:
      platform: "amd64"


run_linux_arm64:
  extends: .run_linux
  image:
    name: "$IMAGE"
    docker:
      platform: "arm64"

#run_linux_riscv64:
#  extends: .run_linux
#  image:
#    name: "$IMAGE"
#    docker:
#      platform: "riscv64"

#run_macos:
#  extends: .run
#  image: macos-14-xcode-15
#  before_script: |
#    set -ex
#    /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"
#    brew install pkg-config libbsd jemalloc python3 git libzstd ncurses stockfish
#    export CC=cc CXX=CXX
#    export MAKE=make
#    CURRENT_DIR="$PWD"
#    git clone https://github.com/fairy-stockfish/Fairy-Stockfish ~/fairy-stockfish
#    cd ~/fairy-stockfish
#    "$MAKE" -C ./src
#    mkdir -p ~/.local/bin
#    export PATH="$HOME/.local/bin:$PATH"
#    "$MAKE" -C ./src install PREFIX=~/.local/bin
#    cd "$CURRENT_DIR"
